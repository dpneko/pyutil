
nginxs = {"/swap/scan/liqstatiscs": "新sunswapv1主节点",
"/swap/scan/volstatiscs": "新sunswapv1主节点",
"/data_platform/swapv1/common_info": "旧sunswap主节点",
"/swap/v2/burnLog": "旧sunswap从节点",
"/swap": "新sunswapv1从节点",
"/sunProject/tronbullish": "旧sunswap从节点",
"/sunProject/tronbull": "旧sunswap从节点",
"/sunProject": "新sunio从节点",
"/justlend": "旧sunswap从节点",
"/scan": "旧sunswap从节点",
"/balances/BTCSnapshot": "旧sunswap从节点",
"/zapper": "旧sunswap从节点",
"/v1/tradepairlist": "旧sunswap从节点",
"/swap/v2/exchanges/scan": "新sunswapv1从节点",
"/swap/scan/exchanges": "新sunswapv1从节点",
"/swap/liquidityuser": "新sunswapv1从节点",
"/": "旧sunswap主节点",
"/swap/ssp": "旧sunswap从节点",
"/ssp": "新sunio从节点",
"/swap/scan/csvstatiscs": "新sunswapv1主节点",
"/defi/baseInfo": "默认转发旧sunswap从节点",
"/scan/tokenInfo/timeLine/MKR": "旧sunswap从节点",
"/scan/tokenInfo/timeLine/DAI": "旧sunswap从节点",
"/scan/tokenInfo/timeLine/TRX": "旧sunswap从节点",
"/scan/collInfo/timeLine": "旧sunswap从节点",
"/scan/feedInfo/timeLine": "旧sunswap从节点",
"/scan/cdpHistory/week": "旧sunswap从节点",
"/lend": "返回404",
"/druid": "旧sunswap从节点",
"/swap/v2/setCalculated": "新sunswapv1主节点",
"/scan/cdpInfo/getOrigin": "旧sunswap主节点",
"/scan/updateAccessToken": "旧sunswap主节点",
"/v2/stablepairs": "新sunio从节点"}

urls = ["/justlend/markets/dashboard",
"/justlend/gov/proposalList",
"/justlend/gov/voteStatus",
"/justlend/markets",
"/justlend/yieldInfos",
"/justlend/markets/jtokenDetails",
"/justlend/account",
"/scan/cdpInfo/getOrigin",
"/exportLendInfo",
"/saveExportLendInfoForDay",
"/scan/getTapInfo",
"/admin/justlend/updateInterestRateModel",
"/scan/updateAccessToken",
"/timeLineFix",
"/liqlog",
"/apenft/gov/proposalList",
"/apenft/gov/voteStatus",
"/defi/baseInfo",
"/defi/crossChainBlackList",
"/data_platform/swapv1/csv_daily_vol_liq",
"/data_platform/justlend/common_info",
"/data_platform/swapv1/common_info",
"/gov/executive/convert/{address}",
"/gov/executive/{eKey}",
"/gov/executive/list",
"/gov/poll/{pollKey}",
"/gov/poll/list",
"/lend/account",
"/lend/jtoken",
"/requesthello",
"/sayhello",
"/subscribe",
"/proxyInfo/isProxy",
"/proxyInfo/byUserAddress",
"/scan/cdpHistory/latest",
"/scan/cdpHistory/week",
"/scan/cdpHistory/interactions",
"/scan/helper/calFee",
"/scan/feeInfo",
"/sunProject/circulatingSupply",
"/sunProject/welcome",
"/sunProject/mined",
"/sunProject/sent",
"/sunProject/earned",
"/sunProject/snapshot",
"/sunProject/snapshotList",
"/sunProject/getSnapShot",
"/sunProject/recommend",
"/sunProject/topVote",
"/sunProject/tokenBrief",
"/sunProject/votedTo",
"/sunProject/totalVoted",
"/scan/get_jusdd_net_assets",
"/sunProject/tronbull",
"/sunProject/tronbullish",
"/swap/v2/tokenList",
"/swap/v2/tokenBrief",
"/swap/v2/defaultListSet",
"/swap/v2/isToken",
"/swap/v2/exchangesLite",
"/swap/v2/exchangesLiteV2",
"/swap/v2/exchanges/search",
"/swap/v2/exchanges/scan",
"/swap/v2/exchanges",
"/swap/v2/exchanges/default",
"/swap/v2/tokenList/default",
"/swap/v2/burnLog",
"/swap/v2/setCalculated",
"/v2/stablepairs",
"/v1/tradepairlist",
"/v2/allpairs",
"/third/allpairs",
"/swap/tokenlist",
"/swap/scan/transactions2",
"/swap/liquidityuser",
"/swap/scan/exchanges",
"/swap/scan/volumeall",
"/swap/scan/getExchangeInfo",
"/swap/scan/liqstatiscs",
"/swap/scan/csvstatiscs",
"/swap/scan/triggercsvSnapshot",
"/swap/scan/volstatiscs",
"/swap/scan/priceinfo",
"/swap/scan/statusinfo",
"/swap/scan/liquidityall",
"/swap/scan/transactions",
"/scan/cdpInfo/getAll || /cdpInfo/getAll",
"/scan/cdpInfo/getBrief",
"/scan/cdpInfo/byCdpId || /cdpInfo/byCdpId",
"/scan/tokenInfo/timeLine/{tokenName}",
"/scan/feedInfo/timeLine",
"/scan/collInfo/timeLine",
"/justswap.json",
"/v1/sunMiningBrief",
"/zapper/swap/liquidity",
"/zapper/justswap/account",
"/zapper/justlend/account",
"/zapper/lend/account",
"/zapper/sunio/account",
"/zapper/sunswap/account",
"/contract_list/just",
"/contract_list/sun",
"/tvltweak",
"/tvls",
"/balances/BTC",
"/balances/getTotalLockedValue",
"/balances/BTCSnapshot",
"/v2/balances/snapshot",
"/ssp/getSunIOTvl",
"/ssp/getAirDropStatic",
"/ssp/getAirDropData",
"/ssp/getVolData",
"/ssp/getPoolData",
"/ssp/getPoolDataV2",
"/ssp/getUserVoteData",
"/error",
"/error",
"/**/favicon.ico"]

def url_nginx_mapping(urls, nginxs):
    nginxs_keys = sorted(nginxs, key=lambda s : s.count('/') * 100 + len(s))
    url_mapping = {}
    for url in urls:
        for nginx in nginxs_keys:
            if url.startswith(nginx):
                url_mapping[url] = nginx
    for url, nginx in url_mapping.items():
        print(f"\"{url}\",\"{nginxs[nginx]}\",\"{nginx}\"")

url_nginx_mapping(urls, nginxs)
